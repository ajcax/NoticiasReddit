{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/app/services/reddit.service.ts","../../src/pages/login/login.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 200;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 200\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 245;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 245\n// module chunks = 0","import { Injectable } from '@angular/core';\r\nimport { Http , HttpModule } from '@angular/http';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class RedditService {\r\n    http: any;\r\n    baseUrl: String;\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n        this.baseUrl = 'https://www.reddit.com';\r\n    }\r\n\r\n    getTops(limit) {\r\n        return this.http.get(this.baseUrl+'/'+'top.json?limit='+limit)\r\n            .map(resp => resp.json());\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/reddit.service.ts","import { Component, NgZone } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\nimport firebase from 'firebase';\nimport { GooglePlus } from '@ionic-native/google-plus';\nimport { LoadingController } from 'ionic-angular';\n\nimport { HomePage } from '../home/home';\n\n\n@Component({\n  selector: 'login',\n  templateUrl: 'login.html'\n})\nexport class Login {\n\n  userProfile: any = null;\n  zone: NgZone;\n  constructor(public navCtrl: NavController, private googlePlus: GooglePlus, public loadingCtrl: LoadingController) {\n    this.zone = new NgZone({});\n    firebase.auth().onAuthStateChanged( user => {\n      this.zone.run( () => {\n        if (user){\n          this.userProfile = user;\n        } else { \n          this.userProfile = null; \n        }\n      });\n    });\n  }\n\n  presentLoading() {\n    let loader = this.loadingCtrl.create({\n      content: \"Please wait...\",\n      duration: 3000\n    });\n    loader.present();\n  }\n\n  loginUser(): void {\n    this.googlePlus.login({\n      'webClientId': '785712574179-ca1gqhggcu8kpiesp7votg95j3n20ia5.apps.googleusercontent.com',\n      'offline': true\n    }).then( res => {\n      firebase.auth().signInWithCredential(firebase.auth.GoogleAuthProvider.credential(res.idToken))\n        .then( success => {\n          this.presentLoading();\n          console.log(\"Firebase success: \" + JSON.stringify(success));\n          this.navCtrl.push(HomePage, { \"userProfile\": this.userProfile });\n        })\n        .catch( error => console.log(\"Firebase failure: \" + JSON.stringify(error)));\n      }).catch(err => console.error(err));\n      \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { RedditService } from '../../app/services/reddit.service';\n\n\n@Component({\n  selector: 'home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public userProfile;\n  items: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private redditService: RedditService) {\n    this.userProfile = navParams.get(\"userProfile\");\n  }\n\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.getTops(50);\n  }\n\n  getTops(limit) {\n    this.redditService.getTops(limit).subscribe(resp => {\n      this.items = resp.data.children;\n    })\n  }\n\n  doInfinite(infiniteScroll) {\n    console.log('Begin async operation');\n    setTimeout(() => {\n      \n    for (let i = 0; i < 10; i++) {\n      this.items.push(this.items.length);      \n    }\n    \n      console.log('Async operation has ended');\n      infiniteScroll.complete();\n    }, 500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule, Http } from '@angular/http';\n\n\nimport { GooglePlus } from '@ionic-native/google-plus';\n\nimport { MyApp } from './app.component';\nimport { Login } from '../pages/login/login';\nimport { HomePage } from '../pages/home/home';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    Login\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    Login\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    GooglePlus,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport firebase from 'firebase';\n\nimport { RedditService } from '../app/services/reddit.service';\n\nimport { Login } from '../pages/login/login';\n\n\n\n@Component({\n  templateUrl: 'app.html',\n  providers: [ RedditService ]\n})\nexport class MyApp {\n  rootPage:any = Login;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n\n    // init config of firebase\n    firebase.initializeApp({\n      apiKey: \"AIzaSyDDkiCjQ3yfiwzrCtM6saxcmOnbENM006Y\",\n      authDomain: \"testreddit-e68c6.firebaseapp.com\",\n      databaseURL: \"https://testreddit-e68c6.firebaseio.com\",\n      projectId: \"testreddit-e68c6\",\n      storageBucket: \"testreddit-e68c6.appspot.com\",\n      messagingSenderId: \"785712574179\"\n    });\n\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}